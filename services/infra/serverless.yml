# Stack containing core shared infrastructure resources.
service: ${self:custom.appName}-infra

provider:
  name: aws
  region: ${file(../../common/infra/provider-settings.yml):region}
  runtime: ${file(../../common/infra/provider-settings.yml):runtime}
  stage: ${file(../../common/infra/provider-settings.yml):stage}
  logRetentionInDays: ${file(../../common/infra/provider-settings.yml):logRetentionInDays}
  memorySize: 128
  timeout: 6
  logs:
    httpApi: true
  stackTags: # Stack-wide tags applied to all CF resourses that supports tags
    PROJECT: ${file(../../common/infra/provider-settings.yml):appName}
    SERVICE: ${self:service}
  # TODO
  #   stackPolicy:
  #     - Effect: Allow
  #       Principal: '*'
  #       Action: 'Update:*'
  #       Resource: '*'
  #     # Prevent CloudFormation from replacing or deleting DynamoDB tables
  #     - Effect: Deny
  #       Principal: '*'
  #       Resource: '*'
  #       Condition:
  #         StringEquals:
  #           ResourceType:
  #             - AWS::DynamoDB::Table
  #       Action:
  #         - Update:Replace
  environment:
    STAGE: ${self:provider.stage}
    REGION: ${self:provider.region}
    EVENTBRIDGE_SERVICE_BUS_NAME: ${self:custom.serviceBus.name}

custom:
  appName: ${file(../../common/infra/provider-settings.yml):appName}
  dynamoDbTablePrefix: ${self:custom.appName}-${self:provider.stage}
  serviceBus:
    name: !Ref ServiceBus
    arn: !GetAtt ServiceBus.Arn
  webpack:
    includeModules: false
  deletionPolicy:
    personal: Delete
    dev: Delete
    prod: Retain

package:
  individually: true

functions:
  # =================================================================
  # Cognito handlers
  # =================================================================
  cognitoPostConfirmation:
    handler: src/handlers/cognito/postConfirmation.handler
    events:
      - cognitoUserPool:
          pool: RossUserPool
          trigger: PostConfirmation
    iamRoleStatements:
      - Effect: Allow
        Action: events:PutEvents
        Resource: ${self:custom.serviceBus.arn}

resources:
  - ${file(resources/cognito-resources.yml)}
  - ${file(resources/dynamodb-tables.yml)}
  - ${file(resources/eventbridge-resources.yml)}
  - ${file(resources/sqs-resources.yml)}
  - ${file(resources/s3-cloudfront-resources.yml)}
  - Outputs:
      AWSAccountId:
        Value: !Ref 'AWS::AccountId'
      DynamoDBTablePrefix:
        Value: ${self:custom.dynamoDbTablePrefix}

plugins:
  - serverless-webpack
  - serverless-iam-roles-per-function
